{"/":{"title":"ðŸª´ Aaron's Garden","content":"[[notes/Authentication System Design Notes|Authentication System Design Notes]]\n[[notes/first 2brain note|first 2brain note]]","lastmodified":"2023-12-27T21:45:59.32365959Z","tags":[]},"/notes/Authentication-System-Design-Notes":{"title":"Authentication System Design Notes","content":"\nKey Features:\n- Users Register\n- Users login\n- Users sign-out\n\nTo consider:\n- Security\n- User count\n\n## Initial Problem:\nHTTP is stateless, but login is stateful (not having to login on every request). Key question is how do we make HTTP requests stateful?\n\nWe can add user field to requests to represent which user is interacting with API\n**POST /login**\n{ user: \"bob\", pass: \"lol\"}\n\nNow how the problem arises of how can we differentiate between requests from bad actors that claim that they are {user: \"bob\"} \n### Identifying State\nSession Token are hashed strings used to identify who is interacting with the server. The tokens are generated on login and stored server side on a key value table of users : session token. \n\nExample:\n\nUser      |  Session\n---- | ----\nBob       |   xifsop9\nAlice       |   few8nce\nBob       |   ewijpw0\n\n## Storing Sessions\nNow that we have session tokens generated, we need to figure out how can we store them on the client.\n\nTwo types: **Cookie Based** or **Local Storage**\n##### Cookie Based\nSecurity Flaws:\n- [XSS]\n- [CSRF]\n\n##### Local Storage\nNeed users to make deliberate requests\n\n\n## Architectural Considerations\nSession tokens **require** a DB hit.\nConcerns:\n- DoS attack\n- DB scale\n\n**Typically the solution is to decentralize**\n\n![[Screenshot 2023-12-27 at 1.23.43 PM.png]]\nan idea is to use JSON Web Tokens (JWTs)\n## JSON Web Tokens (JWTs)\nJWTs are structured as {header, payload, signature} where:\n- header -\u003e algorithm  + type of token (JWT)\n- payload -\u003e app data (user data)\n- signature -\u003e algorithm(header + data, secret)\nThe signature is use the algorithm to verify the data.\n\n![[Screenshot 2023-12-27 at 1.29.48 PM.png]]\nConsiderations:\n- Uses JWT to verify identity, doesn't have a central state of truth as with the sessions table.\n\n\n\n","lastmodified":"2023-12-27T21:45:59.32365959Z","tags":[]},"/notes/first-2brain-note":{"title":"first 2brain note","content":"\nHello world! \n\npretty basic huh ?\n\nxD\n","lastmodified":"2023-12-27T21:45:59.32365959Z","tags":[]},"/notes/second-2brain-note-lol":{"title":"second 2brain note lol","content":"\ntesting hot reload for dev","lastmodified":"2023-12-27T21:45:59.32365959Z","tags":[]},"/notes/third-2-brain-note-lol":{"title":"third 2 brain note lol","content":"\n:P","lastmodified":"2023-12-27T21:45:59.32365959Z","tags":[]},"/tags/setup":{"title":"setup","content":"","lastmodified":"2023-12-27T21:45:59.32365959Z","tags":[]}}